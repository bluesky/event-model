# ruff: noqa
# type: ignore
# generated by datamodel-codegen:
#   filename:  bulk_events.json

from __future__ import annotations

from typing import Any, Dict, List, TypedDict

from typing_extensions import NotRequired


class BulkEvent(TypedDict):
    """
    Document to record a quanta of collected data
    """

    data: Dict[str, Any]
    """
    The actual measurement data
    """
    timestamps: Dict[str, Any]
    """
    The timestamps of the individual measurement data
    """
    filled: NotRequired[Dict[str, Any]]
    """
    Mapping the keys of externally-stored data to a boolean indicating whether that data has yet been loaded
    """
    descriptor: str
    """
    UID to point back to Descriptor for this event stream
    """
    seq_num: int
    """
    Sequence number to identify the location of this Event in the Event stream
    """
    time: float
    """
    The event time.  This maybe different than the timestamps on each of the data entries
    """
    uid: str
    """
    Globally unique identifier for this Event
    """


BulkEvents = Dict[str, List[BulkEvent]]
